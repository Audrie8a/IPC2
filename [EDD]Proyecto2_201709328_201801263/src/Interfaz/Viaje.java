/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Algoritmos.Dijkstra;
import Algoritmos.Floyd;
import Estructuras.BlockChain_Viajes;
import Estructuras.grafoRutas;
import static Estructuras.grafoRutas.CaminoCorto;
import static Extra.Listas.BC;
import static Extra.Listas.Prueba;
import static Extra.Listas.conduc;
import static Extra.Listas.tabl;
import Nodos.nodoCaminoCorto;
import Nodos.nodoCliente;
import Nodos.nodoConductor;
import Nodos.nodoViaje;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Audrie
 */
public class Viaje extends javax.swing.JFrame {
    
    Calendar hora = new GregorianCalendar();
    /**
     * Creates new form Viaje
     */
    public Viaje() {
        initComponents();
        dcHora.setCalendar(hora);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        dcFecha = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dcHora = new com.toedter.calendar.JDateChooser();
        txtO = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtD = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        txtConductor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnAgregar2 = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        txtLlaveViaje = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dcFecha.setDateFormatString("dd/MM/yy");

        jLabel1.setText("Fecha:");

        jLabel2.setText("Origen:");

        jLabel3.setText("Hora:");

        dcHora.setDateFormatString("HH:mm:ss");
        dcHora.setMaxSelectableDate(new java.util.Date(253370790116000L));
        dcHora.setMinSelectableDate(new java.util.Date(-62135744284000L));

        txtO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOActionPerformed(evt);
            }
        });

        jLabel4.setText("Destino:");

        txtD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDActionPerformed(evt);
            }
        });

        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });

        txtConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConductorActionPerformed(evt);
            }
        });

        jLabel6.setText("DPI Cliente:");

        jLabel5.setText("DPI Conductor:");

        jLabel7.setText("Placa:");

        txtPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaActionPerformed(evt);
            }
        });

        jButton1.setText("Graficar Lista Viajes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Graficar Viaje");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCliente)
                            .addComponent(txtConductor)
                            .addComponent(txtPlaca)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcHora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtO, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtD)
                            .addComponent(dcFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(dcHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtConductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAgregar2.setText("Agregar");
        btnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregar2ActionPerformed(evt);
            }
        });

        Regresar.setText("Regresar Menú");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        txtLlaveViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLlaveViajeActionPerformed(evt);
            }
        });

        jLabel8.setText("Ingrese id Viaje:");

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLlaveViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(0, 85, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Regresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtLlaveViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOActionPerformed

    private void txtDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDActionPerformed

    private void txtConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConductorActionPerformed

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed

    private void txtPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaActionPerformed

    private void btnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregar2ActionPerformed
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yy");
            SimpleDateFormat sdh = new SimpleDateFormat("HH:mm:ss");
            String Origen = txtO.getText();
            String Destino = txtD.getText();
            String Fecha = sdf.format(dcFecha.getDate());
            String Hora = sdh.format(dcHora.getDate());
            String dpiCliente = txtCliente.getText();
            String dpiConductor = txtConductor.getText();
            String Placa = txtPlaca.getText();

            if (Origen != null && Destino != null && Fecha != null && Hora != null && dpiCliente != null && dpiConductor != null && Placa != null) {
                boolean ExistenciaRuta = CaminoMasCorto(Origen, Destino);
                if (ExistenciaRuta) {
                    int i = 0;
                    boolean condicion = false;
                    while (Prueba[i] != null) {
                        if (Prueba[i].getPlaca().equals(Placa)) {
                            condicion = true;
                        }
                        i++;
                    }
                    if (condicion == true) {
                        String llave = Placa + Fecha + Hora;
                        String FechaHora = Fecha + Hora;
                        nodoViaje Viaje = BC.Buscar(llave);
                        if (Viaje == null) {
                            nodoCliente nodoAux;
                            nodoAux = tabl.extraerNodo(dpiCliente);
                            if (nodoAux != null && nodoAux.getDPI().equals(dpiCliente)) {
                                int ContadorAux = nodoAux.getContador();
                                ContadorAux += 1;
                                nodoAux.setContador(ContadorAux);
                                tabl.InsertarVectorReporte(dpiCliente, ContadorAux);
                            }
                            if (BC.BuscarContadorVector(Placa)!=1005) {
                                int AuxContador = BC.BuscarContadorVector(Placa);
                                AuxContador+=1;
                                int indice=BC.BuscarUsuarioVector(Placa);
                                BC.ArrayReporteVehi[indice].setContador(AuxContador);
                            }else if (BC.BuscarContadorVector(Placa)==1005) {
                                int  AuxContador = 1;
                                BC.InsertarVectorReporte(Placa, AuxContador);
                                
                            }
                            nodoConductor nodoAuxConduc;
                            nodoAuxConduc = conduc.Buscar(dpiConductor);
                            if (nodoAuxConduc!= null && nodoAuxConduc.getDPI().equals(dpiConductor)) {
                                int ContadorAuxConduc =nodoAuxConduc.getContador();
                                ContadorAuxConduc+=1;
                                nodoAuxConduc.setContador(ContadorAuxConduc);
                                conduc.InsertarVectorReporte(dpiConductor, ContadorAuxConduc);
                            }
                            BC.PrevioInsertarViaje(Origen, Destino, FechaHora, llave, dpiCliente, dpiConductor, Placa);
                            BC.MostrarC();
                        } else {
                            JOptionPane.showMessageDialog(null, "El Vehiculo elegido no se encuentra disponible para este horario, por favor elija otro horario u otro conductor.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El Vehículo elegido no se encuentra registrado.");

                    }

                }

            } else {
                JOptionPane.showMessageDialog(null, "Datos vacíos. Favor llenar las casillas que se le solicitan, Gracias!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnAgregar2ActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        this.setVisible(false);
        Principal pri = new Principal();
        pri.setVisible(true);
    }//GEN-LAST:event_RegresarActionPerformed

    private void txtLlaveViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLlaveViajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLlaveViajeActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            String llave = txtLlaveViaje.getText();
            if(llave != null){
                nodoViaje viaje=BC.Buscar(llave);
                if(viaje != null){
                    JOptionPane.showMessageDialog(null, viaje.toString());
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el viaje buscado.");
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "No se ha ingresado el id a buscar.");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
         try {
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yy");
            SimpleDateFormat formatoH = new SimpleDateFormat("HH:mm:ss"); 
            String llaveModificar = txtLlaveViaje.getText();
            String Origen = txtO.getText();
            String Destino= txtD.getText();
            String Fecha= formato.format(dcFecha.getDate());
            String Hora = formatoH.format(dcHora.getDate());
            String dpiCliente =txtCliente.getText();
            String dpiConductor =txtConductor.getText();
            String Placa = txtPlaca.getText();            
            String llave = Placa+Fecha+Hora;
            Nodos.nodoOrigen nodo=grafoRutas.Vertice.BuscarVertice(Destino);
            Nodos.nodoOrigen nodoO= grafoRutas.Vertice.BuscarVertice(Origen);
            if(nodo != null || nodoO !=null){
                if(llaveModificar != null){
                nodoViaje viaje=BC.Buscar(llaveModificar);
                if(viaje!=null){
                    if(Origen != null && Destino != null && Fecha!=null && Hora !=null && dpiCliente!=null && dpiConductor!=null && Placa !=null){
                        String HoraFecha = Fecha+Hora;
                        BC.PrevioEditar(llaveModificar,llave, Origen, Destino, HoraFecha, dpiCliente, dpiConductor, Placa);
                        JOptionPane.showMessageDialog(null, "Viaje Modificado");
                    }else{
                        JOptionPane.showMessageDialog(null, "Datos vacíos. Favor llenar las casillas que se le solicitan, Gracias!");
                    }
                   
                    
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el viaje que desea modificar");
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se ha ingresado el id a buscar.");
            }
            }else{
                JOptionPane.showMessageDialog(null, "Los datos de Origen y destino no coinciden con los datos registrados, verifique.");
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        try {
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yy");
            SimpleDateFormat formatoH = new SimpleDateFormat("HH:mm:ss"); 
            String llave = txtLlaveViaje.getText();
            if(llave != null){
                nodoViaje viaje=BC.Buscar(llave);
                if(viaje!=null){
                    txtO.setText(viaje.getOrigen());
                    txtD.setText(viaje.getDestino());                    
                    txtCliente.setText(viaje.getPtrCliente().getDPI());
                    txtConductor.setText(viaje.getPtrConductor().getDPI());
                    
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el viaje que desea Consultar");
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se ha ingresado el id a Consultar.");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            String llave = txtLlaveViaje.getText();
            if(llave != null){
                nodoViaje viaje=BC.Buscar(llave);
                if(viaje != null){
                    BC.Eliminar(llave);
                    JOptionPane.showMessageDialog(null, "Viaje eliminado.");
                }else{
                    JOptionPane.showMessageDialog(null, "No se encontró el viaje a eliminar.");
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "No se ha ingresado el id del viaje a eliminar.");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BC.Graficar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String Origen = txtO.getText();
        String Destino = txtD.getText();
        CaminoMasCorto2(Origen, Destino);
        //BC.GraficaGeneral();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viaje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Viaje().setVisible(true);
            }
        });
    }

    public boolean CaminoMasCorto(String txtO, String txtD){
        boolean Existencia=false;
        try{
            
            if( !txtO.equals("") && !txtD.equals("")){
                Nodos.nodoOrigen nodo=grafoRutas.Vertice.BuscarVertice(txtD);
                Nodos.nodoOrigen nodoO= grafoRutas.Vertice.BuscarVertice(txtO);
                if(nodo != null || nodoO !=null){
                    Dijkstra dj= new Dijkstra();
                    dj.dijkstra2(nodoO.getIndex());
                
                    Floyd f = new Floyd();
                    int indexO = nodo.getIndex();
                    int indexD = nodoO.getIndex();
                    System.out.println(f.MetodoFloyd(indexD,indexO));
                    try {
                        //grafoRutas.CaminoCorto.BuscarVertice(txtO, txtD).getLstNodosDetino().GraficarCaminoMin();
                        Existencia = true;
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "No existe una ruta con ese origen y ese destino, intente con otras, Gracias!");
                    }
                }else{
                    if(nodo ==null){
                        JOptionPane.showMessageDialog(null, "El Destino ingresado no se encuentra entre los datos cargados");
                    }else {
                        JOptionPane.showMessageDialog(null, "El Origen ingresado no se encuentra entre los datos cargados");
                    }
                    
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "No se han ingresado los datos necesarios para la obtención de la Ruta");
            }
            
        }catch(Exception e){
            System.out.println(e);
        }
        return  Existencia;
    }
    
    public boolean CaminoMasCorto2(String txtO, String txtD){
        boolean Existencia=false;
        try{
            
            if( !txtO.equals("") && !txtD.equals("")){
                Nodos.nodoOrigen nodo=grafoRutas.Vertice.BuscarVertice(txtD);
                Nodos.nodoOrigen nodoO= grafoRutas.Vertice.BuscarVertice(txtO);
                if(nodo != null || nodoO !=null){
                    Dijkstra dj= new Dijkstra();
                    dj.dijkstra2(nodoO.getIndex());
                
                    Floyd f = new Floyd();
                    int indexO = nodo.getIndex();
                    int indexD = nodoO.getIndex();
                    System.out.println(f.MetodoFloyd(indexD,indexO));
                    try {
                        grafoRutas.CaminoCorto.BuscarVertice(txtO, txtD).getLstNodosDetino().GraficarCaminoMin();
                        Existencia = true;
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "No existe una ruta con ese origen y ese destino, intente con otras, Gracias!");
                    }
                }else{
                    if(nodo ==null){
                        JOptionPane.showMessageDialog(null, "El Destino ingresado no se encuentra entre los datos cargados");
                    }else {
                        JOptionPane.showMessageDialog(null, "El Origen ingresado no se encuentra entre los datos cargados");
                    }
                    
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "No se han ingresado los datos necesarios para la obtención de la Ruta");
            }
            
        }catch(Exception e){
            System.out.println(e);
        }
        return  Existencia;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Regresar;
    private javax.swing.JButton btnAgregar2;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private com.toedter.calendar.JDateChooser dcFecha;
    private com.toedter.calendar.JDateChooser dcHora;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtConductor;
    private javax.swing.JTextField txtD;
    private javax.swing.JTextField txtLlaveViaje;
    private javax.swing.JTextField txtO;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables
}
